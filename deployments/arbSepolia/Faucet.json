{
  "address": "0xeB80F5bbD08EEaf9E77F5d35E27537b133d5f5A0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_synth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogUpdateFaucetAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "synth",
          "type": "address"
        }
      ],
      "name": "LogUpdateSynth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastUser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LowBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RecoveredSynth",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SYNTH",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverSynth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFaucetAmount",
          "type": "uint256"
        }
      ],
      "name": "setFaucetAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_synth",
          "type": "address"
        }
      ],
      "name": "setSynthToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8084420433715d6b3f6a83b5a3f416ad93d55cc4a5ca9099b0ab6e54e63c1a12",
  "receipt": {
    "to": null,
    "from": "0xD2344ce2CFEaD1cBE24e33E8301411d62946A1d2",
    "contractAddress": "0xeB80F5bbD08EEaf9E77F5d35E27537b133d5f5A0",
    "transactionIndex": 4,
    "gasUsed": "541364",
    "logsBloom": "0x
    "blockHash": "0x67d932340338ac3fa576067619a1c8437ef94e3be647ef7b6f4757b97b192e00",
    "transactionHash": "0x8084420433715d6b3f6a83b5a3f416ad93d55cc4a5ca9099b0ab6e54e63c1a12",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 35282589,
        "transactionHash": "0x8084420433715d6b3f6a83b5a3f416ad93d55cc4a5ca9099b0ab6e54e63c1a12",
        "address": "0xeB80F5bbD08EEaf9E77F5d35E27537b133d5f5A0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d2344ce2cfead1cbe24e33e8301411d62946a1d2"
        ],
        "data": "0x",
        "logIndex": 7,
        "blockHash": "0x67d932340338ac3fa576067619a1c8437ef94e3be647ef7b6f4757b97b192e00"
      }
    ],
    "blockNumber": 35282589,
    "cumulativeGasUsed": "2781659",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD2344ce2CFEaD1cBE24e33E8301411d62946A1d2",
    "0x1D2c289687a5c7f6a16Ac7801D73563B7f8d7bEe"
  ],
  "numDeployments": 1,
  "solcInputHash": "dce1f96b0fa5eb60362569f6218ed4ca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_synth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogUpdateFaucetAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"synth\",\"type\":\"address\"}],\"name\":\"LogUpdateSynth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lastUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LowBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RecoveredSynth\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SYNTH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverSynth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFaucetAmount\",\"type\":\"uint256\"}],\"name\":\"setFaucetAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_synth\",\"type\":\"address\"}],\"name\":\"setSynthToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/mock/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity =0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Faucet is Ownable{\\n    \\n    IERC20 public SYNTH;\\n\\n    uint256 public faucetAmount = 10000 * 1e18;\\n\\n    mapping (address => uint256) public claimedAmount;\\n\\n    event Claimed(address indexed user, uint256 amount);\\n    event RecoveredSynth(address indexed owner, uint256 amount);\\n    event LogUpdateSynth(address indexed owner, address indexed synth);\\n    event LogUpdateFaucetAmount(address indexed owner, uint256 amount);\\n    event LowBalance(address lastUser,uint256 amount);\\n \\n    constructor(address _owner, address _synth) Ownable(_owner) {\\n        SYNTH = IERC20(_synth);\\n    }\\n\\n    function setSynthToken(address _synth) external onlyOwner {\\n        SYNTH = IERC20(_synth);\\n\\n        emit LogUpdateSynth(msg.sender, _synth);\\n    }\\n\\n    function setFaucetAmount(uint256 _newFaucetAmount) external onlyOwner {\\n        faucetAmount = _newFaucetAmount;\\n\\n        emit LogUpdateFaucetAmount(msg.sender, _newFaucetAmount);\\n    }\\n\\n    function claim(uint256 _amount) external {\\n        require(_amount + claimedAmount[msg.sender] <= faucetAmount, \\\"Faucet:  amount greater than faucet amount\\\");\\n\\n        claimedAmount[msg.sender] += _amount;\\n\\n        SYNTH.transfer(msg.sender, _amount);\\n\\n        uint256 balanceOfContract = SYNTH.balanceOf(address(this));\\n\\n        if (balanceOfContract <= faucetAmount * 2) {\\n            emit LowBalance(msg.sender, balanceOfContract);\\n        }\\n\\n        emit Claimed(msg.sender, _amount);\\n    }\\n\\n    function recoverSynth(uint256 _amount) external onlyOwner {\\n        SYNTH.transfer(msg.sender, _amount);\\n\\n        emit RecoveredSynth(msg.sender, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x6148d4a620132ba79c7c99827e1cdcc7240ddf0f2cd857c5f4db438291338b7f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080346100e257601f61089d38819003918201601f19168301916001600160401b038311848410176100e75780849260409485528339810103126100e257610052602061004b836100fd565b92016100fd565b906001600160a01b039081169081156100c9576000549260018060a01b03199280848616176000558260405195167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a369021e19e0c9bab24000006002551690600154161760015561078b90816101128239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e25756fe608060408181526004908136101561001657600080fd5b600092833560e01c90816304e869031461064057508063379607f5146103d35780634ca8dc3c1461035f578063715018a6146102f657806381d2fd9c146102a85780638da5cb5b146102825780639aa171e7146101915780639c28143014610172578063e1eddde3146101465763f2fde38b1461009257600080fd5b34610142576020600319360112610142578135916001600160a01b039182841680940361013e576100c1610711565b831561010f57505082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b83823461016e578160031936011261016e576020906001600160a01b03600154169051908152f35b5080fd5b83823461016e578160031936011261016e576020906002549051908152f35b50346101425760206003193601126101425761020c6020833580946101b4610711565b6001600160a01b0360015416908786518096819582947fa9059cbb00000000000000000000000000000000000000000000000000000000845233908401602090939291936001600160a01b0360408201951681520152565b03925af1801561027857610249575b50519081527f1a388d99b24d02b166a5cfe9e3e71921a0d335fff17c3b24c103bc8ed468c60f60203392a280f35b61026a9060203d602011610271575b610262818361069d565b8101906106f4565b503861021b565b503d610258565b82513d86823e3d90fd5b83823461016e578160031936011261016e576001600160a01b0360209254169051908152f35b5090346101425760206003193601126101425735906102c5610711565b81600255519081527fff10cd92460f304f7b1b853b8b59fd453a3727e2faee25a8d21c4c698427815d60203392a280f35b833461035c578060031936011261035c5761030f610711565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461016e57602060031936011261016e57356001600160a01b03811680910361016e5761038c610711565b8073ffffffffffffffffffffffffffffffffffffffff196001541617600155337fcf22ca55722927ffb37b17e72e43c21371d0531cf79e1d5c9d9481283bb25db78380a380f35b5082903461016e5760208060031936011261014257833591338452600382526103ff818520548461067a565b600254106105be573384526003825280842061041c84825461067a565b905560015481517fa9059cbb00000000000000000000000000000000000000000000000000000000815233818801908152602081018690526001600160a01b03928591839185169082908a90829060400103925af180156105b457918491602493610597575b50600154168351928380927f70a08231000000000000000000000000000000000000000000000000000000008252308b8301525afa90811561058d578591610560575b506002548060011b908082046002149015171561054d577fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a94959650811115610514575b50519283523392a280f35b815133815260208101919091527f6e7a4e5f021ee43065c6892a84e7ac4bcb9de8b465d65f6be634acf2193bac8690604090a185610509565b602486601189634e487b7160e01b835252fd5b90508281813d8311610586575b610577818361069d565b8101031261013e5751866104c5565b503d61056d565b82513d87823e3d90fd5b6105ad90833d851161027157610262818361069d565b5088610482565b83513d88823e3d90fd5b608491859151917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602a60248201527f4661756365743a2020616d6f756e742067726561746572207468616e2066617560448201527f63657420616d6f756e74000000000000000000000000000000000000000000006064820152fd5b9290503461067657602060031936011261067657356001600160a01b038116809103610676579260209381526003845220548152f35b8380fd5b9190820180921161068757565b634e487b7160e01b600052601160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106de57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261070c5751801515810361070c5790565b600080fd5b6001600160a01b0360005416330361072557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea264697066735822122091f1fac914660df1b9e2201e85dd282e33b49ace8b9aa40f0c694a1f6290265364736f6c63430008180033",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b600092833560e01c90816304e869031461064057508063379607f5146103d35780634ca8dc3c1461035f578063715018a6146102f657806381d2fd9c146102a85780638da5cb5b146102825780639aa171e7146101915780639c28143014610172578063e1eddde3146101465763f2fde38b1461009257600080fd5b34610142576020600319360112610142578135916001600160a01b039182841680940361013e576100c1610711565b831561010f57505082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b83823461016e578160031936011261016e576020906001600160a01b03600154169051908152f35b5080fd5b83823461016e578160031936011261016e576020906002549051908152f35b50346101425760206003193601126101425761020c6020833580946101b4610711565b6001600160a01b0360015416908786518096819582947fa9059cbb00000000000000000000000000000000000000000000000000000000845233908401602090939291936001600160a01b0360408201951681520152565b03925af1801561027857610249575b50519081527f1a388d99b24d02b166a5cfe9e3e71921a0d335fff17c3b24c103bc8ed468c60f60203392a280f35b61026a9060203d602011610271575b610262818361069d565b8101906106f4565b503861021b565b503d610258565b82513d86823e3d90fd5b83823461016e578160031936011261016e576001600160a01b0360209254169051908152f35b5090346101425760206003193601126101425735906102c5610711565b81600255519081527fff10cd92460f304f7b1b853b8b59fd453a3727e2faee25a8d21c4c698427815d60203392a280f35b833461035c578060031936011261035c5761030f610711565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461016e57602060031936011261016e57356001600160a01b03811680910361016e5761038c610711565b8073ffffffffffffffffffffffffffffffffffffffff196001541617600155337fcf22ca55722927ffb37b17e72e43c21371d0531cf79e1d5c9d9481283bb25db78380a380f35b5082903461016e5760208060031936011261014257833591338452600382526103ff818520548461067a565b600254106105be573384526003825280842061041c84825461067a565b905560015481517fa9059cbb00000000000000000000000000000000000000000000000000000000815233818801908152602081018690526001600160a01b03928591839185169082908a90829060400103925af180156105b457918491602493610597575b50600154168351928380927f70a08231000000000000000000000000000000000000000000000000000000008252308b8301525afa90811561058d578591610560575b506002548060011b908082046002149015171561054d577fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a94959650811115610514575b50519283523392a280f35b815133815260208101919091527f6e7a4e5f021ee43065c6892a84e7ac4bcb9de8b465d65f6be634acf2193bac8690604090a185610509565b602486601189634e487b7160e01b835252fd5b90508281813d8311610586575b610577818361069d565b8101031261013e5751866104c5565b503d61056d565b82513d87823e3d90fd5b6105ad90833d851161027157610262818361069d565b5088610482565b83513d88823e3d90fd5b608491859151917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602a60248201527f4661756365743a2020616d6f756e742067726561746572207468616e2066617560448201527f63657420616d6f756e74000000000000000000000000000000000000000000006064820152fd5b9290503461067657602060031936011261067657356001600160a01b038116809103610676579260209381526003845220548152f35b8380fd5b9190820180921161068757565b634e487b7160e01b600052601160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106de57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261070c5751801515810361070c5790565b600080fd5b6001600160a01b0360005416330361072557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea264697066735822122091f1fac914660df1b9e2201e85dd282e33b49ace8b9aa40f0c694a1f6290265364736f6c63430008180033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/mock/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 264,
        "contract": "contracts/mock/Faucet.sol:Faucet",
        "label": "SYNTH",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 269,
        "contract": "contracts/mock/Faucet.sol:Faucet",
        "label": "faucetAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 273,
        "contract": "contracts/mock/Faucet.sol:Faucet",
        "label": "claimedAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}